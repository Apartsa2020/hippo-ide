[{"D:\\Apartsa\\ide\\hippo-ide\\frontend\\src\\index.js":"1","D:\\Apartsa\\ide\\hippo-ide\\frontend\\src\\reportWebVitals.js":"2","D:\\Apartsa\\ide\\hippo-ide\\frontend\\src\\IndexPage.js":"3","D:\\Apartsa\\ide\\hippo-ide\\frontend\\src\\GitHub_api.js":"4"},{"size":539,"mtime":1611907304987,"results":"5","hashOfConfig":"6"},{"size":375,"mtime":1611907304988,"results":"7","hashOfConfig":"6"},{"size":14700,"mtime":1611914406921,"results":"8","hashOfConfig":"6"},{"size":4828,"mtime":1611907304982,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"11az9yw",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Apartsa\\ide\\hippo-ide\\frontend\\src\\index.js",[],["20","21"],"D:\\Apartsa\\ide\\hippo-ide\\frontend\\src\\reportWebVitals.js",[],"D:\\Apartsa\\ide\\hippo-ide\\frontend\\src\\IndexPage.js",["22"],"import React, { useEffect, useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\n// import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\n\r\n/* ------------------\r\n * !!! My Imports !!!\r\n * ------------------ */\r\nimport DateRangeTwoToneIcon from '@material-ui/icons/DateRangeTwoTone';\r\nimport StarRateIcon from '@material-ui/icons/StarRate';\r\nimport { AvatarGroup } from '@material-ui/lab';\r\nimport ApartsaLogo from './asset/Apartsa_logo.png';\r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nimport { CardActions, CardContent } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\n\r\n\r\nimport \"./IndexPage.css\";\r\nimport { getGitHubRepoStarNumber, getGitHubRepoContributors, getRepoCommitArray, getRepoLastCommitDate } from './GitHub_api';\r\n\r\n\r\n\r\n/* ------------------------\r\n * !!! Global Variables !!!\r\n * ------------------------ */\r\nconst repoOwner = \"Apartsa2020\";\r\nconst repoName = \"hippo-ide\";\r\n// const repoOwner = \"jasonrudolph\";\r\n// const repoName = \"keyboard\";\r\nconst repoLink = \"https://github.com/Apartsa2020/hippo-ide\";\r\n\r\n\r\n\r\n/* ----------------------\r\n * !!! The whole page !!!\r\n * ---------------------- */\r\nexport default function IndexPage() {\r\n  return (\r\n    <div className=\"index-page\">\r\n      <Heading />\r\n      <Grid container style={{maxHeight: '30%',}} >\r\n        <Grid item  className=\"changelog-grid\" >\r\n          <ChangeLog />\r\n        </Grid>\r\n        <Grid item  className=\"signin-grid\" >\r\n          <SignIn />\r\n        </Grid>\r\n      </Grid>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n/* ---------------\r\n * !!! Heading !!!\r\n * --------------- */\r\nfunction Heading(props) {\r\n\r\n  function LastUpdateDate(props) {\r\n    const [lastModifiedDate, setLastModifiedDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n      getRepoLastCommitDate(repoOwner, repoName)\r\n        .then(resp => {\r\n          // console.log( `LastUpdateDate functional component: promise return value = ${resp} with type = ${ typeof(resp) }` );\r\n          setLastModifiedDate(resp);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n      <span>\r\n        <Tooltip title={\"Last updated on \" + dateToYearMonthDayString(lastModifiedDate)}>\r\n          <a href=\"/\">\r\n            <DateRangeTwoToneIcon style={{ fontSize: \"20px\", }} />\r\n            {dateToYearMonthDayString(lastModifiedDate)}\r\n          </a>\r\n        </Tooltip>\r\n      </span>\r\n    );\r\n  }\r\n\r\n  function GitHubStarNumber(props) {\r\n    const [starNumber, setStarNumber] = useState(0);\r\n\r\n    useEffect(() => {\r\n      getGitHubRepoStarNumber(repoOwner, repoName)\r\n        .then(resp => {\r\n          // console.log(`GitHubStarNumber functional component: fetch success with status code = ${resp}`);\r\n          setStarNumber(resp);\r\n          // console.log(`starNumber = ${starNumber}`);\r\n        })\r\n        .catch(error => console.log(`GitHubStarNumber functional component: ${error.mesg}`));\r\n    }, []);\r\n\r\n    return (\r\n      <span>\r\n        <a href=\"/\">\r\n          {\"GitHub\"}\r\n          <StarRateIcon style={{ fontSize: \"18px\", }} />\r\n          {starNumber}\r\n        </a>\r\n      </span>\r\n    );\r\n  }\r\n\r\n  function Contributor(props) {\r\n    const [contributorArray, setContributorArray] = useState([]);\r\n\r\n    const githubAvatarAPI = \"https://avatars.githubusercontent.com/\";\r\n\r\n    useEffect(() => {\r\n      getGitHubRepoContributors(repoOwner, repoName)\r\n        .then(resp => {\r\n          setContributorArray(resp);\r\n        })\r\n        .catch(error => {\r\n          console.log(`fetch repo contributor array: error ${error.mesg}`);\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n      <span>\r\n        <div className=\"contributor\">\r\n          <a href={repoLink} target=\"_blank\" rel=\"noreferrer\">Contributors: </a>\r\n        </div>\r\n        <div className=\"contributor\">\r\n          <AvatarGroup max={4}>\r\n            {contributorArray.map((name, index) => {\r\n              return (\r\n                <Tooltip title={name} key={index}>\r\n                  <Avatar alt={name} src={githubAvatarAPI + name}></Avatar>\r\n                </Tooltip>\r\n              );\r\n            })}\r\n          </AvatarGroup>\r\n        </div>\r\n      </span>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div id=\"heading-block\">\r\n      <div className=\"logo\">\r\n        <a href=\"https://apartsa.com/\">\r\n          <img alt=\"Apartsa Logo\" src={ApartsaLogo} />\r\n        </a>\r\n      </div>\r\n\r\n      <div className=\"headline\">\r\n        <Typography component=\"h1\" variant=\"h4\">\r\n          Apartsa Hippo IDE\r\n              </Typography>\r\n      </div>\r\n\r\n      <div className=\"sub-title\">\r\n        <Typography>\r\n          {\"Warning: This is a beta version. All data will be cleared in 2021-01-19 23:30!\"}\r\n        </Typography>\r\n\r\n        <Typography style={{ paddingTop: 10, }}>\r\n          {\"(The development is still on-going. You are welcomed to contribute codes through \"}\r\n          <Link className=\"heading-link\" href=\"https://github.com/Apartsa2020/hippo-ide\">GitHub</Link>\r\n          {\" or email to \"}\r\n          <Link className=\"heading-link\" href=\"mailto://gx@apartsa.com\" type=\"email\">gx@apartsa.com</Link>\r\n          {\" !) \"}\r\n        </Typography>\r\n      </div>\r\n\r\n      <div className=\"info-box\">\r\n        <LastUpdateDate />\r\n        <GitHubStarNumber repoOwner={repoOwner} repoName={repoName} />\r\n        <Contributor />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/* ---------------\r\n * !!! Sign In !!!\r\n * --------------- */\r\nconst useStyles = makeStyles((theme) => ({\r\n  heading: {\r\n    textAlign: 'center',\r\n  },\r\n\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction SignIn() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\" style={{marginTop: '15%',}}>\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Try It Now\r\n        </Typography>\r\n        <form method=\"POST\" action={\"/service/new\"} className={classes.form} noValidate >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            type=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n        </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n            </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/* --------------------------------------\r\n * !!! ChangeLog (followed GNU style) !!!\r\n * --------------------------------------\r\n * Link: https://www.gnu.org/prep/standards/html_node/Style-of-Change-Logs.html#Style-of-Change-Logs\r\n * \r\n * <Date>     <Contributor Name>    <Contributor Email>\r\n *          <Modification Description>\r\n *          ......\r\n *          ......\r\n */\r\n\r\nfunction ChangeLog(props) {\r\n  const [commitArray, setCommitArray] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getRepoCommitArray(repoOwner, repoName)\r\n      .then(resp => {\r\n        setCommitArray(resp);\r\n        // console.log(`commit array = ${JSON.stringify(commitArray)} with type = ${typeof( commitArray )}`);\r\n      })\r\n      .catch(error => console.log(`failed with mesg = ${error.mesg}`));\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"change-log-block\">\r\n      <Paper variant=\"outlined\" p={1} className=\"change-log-paper\">\r\n        <Typography variant=\"h5\">\r\n          {\"ChangeLog (Follow GNU Style)\"}\r\n        </Typography>\r\n\r\n        <div className=\"log-outer\">\r\n          <div className=\"log\">\r\n            {commitArray.map((item, index) => {\r\n              return (\r\n                <Card key={index} style={{ marginTop: 30, marginBottom: 30, }} >\r\n                  <CardContent>\r\n                    <div className=\"log-metadata\">\r\n                      <span>\r\n                        {changeLogTimeStructure(new Date(item.date))}\r\n                      </span>\r\n                      <span>\r\n                        {item.contributor}\r\n                      </span>\r\n                      <span>\r\n                        {\"<\"}\r\n                        {item.email}\r\n                        {\">\"}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"log-content\">\r\n                      <span>\r\n                        {item.modification}\r\n                      </span>\r\n                    </div>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button size=\"small\" color=\"primary\" href={item.html_url} target=\"_blank\">\r\n                      Learn More\r\n                                </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        \r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* --------------\r\n * !!! Footer !!!\r\n * -------------- */\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"footer\">\r\n      <hr />\r\n      <div className=\"copyright\">\r\n        <Typography>\r\n          {'Copyright © '}\r\n          <Link className=\"footer-link\" href=\"https://apartsa.com/\" target=\"_blank\">\r\n            Apartsa Co.Ltd\r\n          </Link>{' '}\r\n          {new Date().getFullYear()}\r\n          {'.'}\r\n        </Typography>\r\n      </div>\r\n\r\n      <div className=\"footer-info\">\r\n        <div className=\"license\">\r\n          <Typography>\r\n            {'License: '}\r\n            <Link className=\"footer-link\" href=\"https://github.com/Apartsa2020/hippo-ide/blob/main/LICENSE\" target=\"_blank\">\r\n              MIT License\r\n            </Link>\r\n          </Typography>\r\n        </div>\r\n        <div className=\"acknowledge\">\r\n          <Typography>\r\n            {\"Acknowledgement: \"}\r\n            <Link className=\"footer-link\" href=\"https://github.com/cdr/code-server\" target=\"_blank\" style={{ paddingLeft: 10, paddingRight: 10, }}>\r\n              {\"Code-Server\"}\r\n            </Link>\r\n            <Link className=\"footer-link\" href=\"https://reactjs.org/\" target=\"_blank\" style={{ paddingLeft: 10, paddingRight: 10, }}>\r\n              {\"React JS\"}\r\n            </Link>\r\n            <Link className=\"footer-link\" href=\"https://material-ui.com/\" target=\"_blank\" style={{ paddingLeft: 10, paddingRight: 10, }}>\r\n              {\"Material UI\"}\r\n            </Link>\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* ----------------------\r\n * !!! Used Functions !!!\r\n * ---------------------- \r\n * Not functional component \r\n */\r\n\r\n\r\n/* Used in ChangeLog component as a data structure for log info */\r\nexport function LogInfo(contributor, date, email, modification, html_url) {\r\n  // let obj = {\r\n  //     contributor: contributor,\r\n  //     date: date,\r\n  //     email: email,\r\n  //     modification: modification,\r\n  //     html_url: html_url,\r\n  // };\r\n  // return obj;\r\n\r\n  this.contributor = contributor;\r\n  this.date = date;\r\n  this.email = email;\r\n  this.modification = modification;\r\n  this.html_url = html_url;\r\n}\r\n\r\n\r\n/* used in heading for date display */\r\nfunction dateToYearMonthDayString(date) {\r\n  let day = String(date.getDate());\r\n  switch (date.getDate() % 10) {\r\n    case 1:\r\n      day += \"st\";\r\n      break;\r\n    case 2:\r\n      day += \"nd\";\r\n      break;\r\n    case 3:\r\n      day += \"rd\";\r\n      break;\r\n    default:\r\n      day += \"th\";\r\n      break;\r\n  }\r\n\r\n  let year = String(date.getFullYear());\r\n\r\n  // Here, getMonth should plus 1 to get the correct output\r\n  let month;\r\n  switch (date.getMonth() + 1) {\r\n    case 1:\r\n      month = \"January\";\r\n      break;\r\n    case 2:\r\n      month = \"February\";\r\n      break;\r\n    case 3:\r\n      month = \"March\";\r\n      break;\r\n    case 4:\r\n      month = \"April\";\r\n      break;\r\n    case 5:\r\n      month = \"May\";\r\n      break;\r\n    case 6:\r\n      month = \"June\";\r\n      break;\r\n    case 7:\r\n      month = \"July\";\r\n      break;\r\n    case 8:\r\n      month = \"August\";\r\n      break;\r\n    case 9:\r\n      month = \"September\";\r\n      break;\r\n    case 10:\r\n      month = \"October\";\r\n      break;\r\n    case 11:\r\n      month = \"November\";\r\n      break;\r\n    case 12:\r\n      month = \"December\";\r\n      break;\r\n    default:\r\n      console.log(`Error in date to year/month/day string function: unidentified month number ${date.getMonth() + 1}`);\r\n      break;\r\n  }\r\n\r\n  return (day + \" \" + month + \" \" + year);\r\n}\r\n\r\n\r\nfunction changeLogTimeStructure(date) {\r\n  if (date instanceof Date === true) {\r\n    // console.log(`date = ${date} with type = ${ typeof(date) }`);\r\n    let year = String(date.getFullYear());\r\n    let month = String(date.getMonth() + 1);\r\n    let day = String(date.getDate());\r\n\r\n    let time = date.toLocaleTimeString();\r\n\r\n    return `${year}-${month}-${day}   ${time}`;\r\n  }\r\n  else {\r\n    console.log(\"changeLog time structure function: input date is not of type Date\");\r\n    return null;\r\n  }\r\n}","D:\\Apartsa\\ide\\hippo-ide\\frontend\\src\\GitHub_api.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":10,"column":8,"nodeType":"29","messageId":"30","endLine":10,"endColumn":11},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]