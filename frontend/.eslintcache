[{"D:\\Apartsa\\ide\\hippo-ide\\frontend\\src\\index.js":"1","D:\\Apartsa\\ide\\hippo-ide\\frontend\\src\\reportWebVitals.js":"2","D:\\Apartsa\\ide\\hippo-ide\\frontend\\src\\api\\GitHub_api.js":"3","D:\\Apartsa\\ide\\hippo-ide\\frontend\\src\\components\\HomePage\\SignIn.js":"4","D:\\Apartsa\\ide\\hippo-ide\\frontend\\src\\components\\HomePage\\Heading.js":"5","D:\\Apartsa\\ide\\hippo-ide\\frontend\\src\\components\\HomePage\\ChangeLog.js":"6","D:\\Apartsa\\ide\\hippo-ide\\frontend\\src\\components\\HomePage\\Footer.js":"7","D:\\Apartsa\\ide\\hippo-ide\\frontend\\src\\page\\IndexPage.js":"8","D:\\Apartsa\\ide\\hippo-ide\\frontend\\src\\IndexPage.js":"9"},{"size":539,"mtime":1612175358052,"results":"10","hashOfConfig":"11"},{"size":375,"mtime":1611907304988,"results":"12","hashOfConfig":"11"},{"size":5252,"mtime":1612174631511,"results":"13","hashOfConfig":"11"},{"size":2970,"mtime":1612173102120,"results":"14","hashOfConfig":"11"},{"size":6148,"mtime":1612174180643,"results":"15","hashOfConfig":"11"},{"size":3471,"mtime":1612174167288,"results":"16","hashOfConfig":"11"},{"size":1770,"mtime":1612174272730,"results":"17","hashOfConfig":"11"},{"size":1031,"mtime":1612175356816,"results":"18","hashOfConfig":"11"},{"size":1026,"mtime":1612175321165,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11az9yw",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"D:\\Apartsa\\ide\\hippo-ide\\frontend\\src\\index.js",[],"D:\\Apartsa\\ide\\hippo-ide\\frontend\\src\\reportWebVitals.js",[],["40","41"],"D:\\Apartsa\\ide\\hippo-ide\\frontend\\src\\api\\GitHub_api.js",[],"D:\\Apartsa\\ide\\hippo-ide\\frontend\\src\\components\\HomePage\\SignIn.js",[],"D:\\Apartsa\\ide\\hippo-ide\\frontend\\src\\components\\HomePage\\Heading.js",["42"],"import React, { useEffect, useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\nimport DateRangeTwoToneIcon from '@material-ui/icons/DateRangeTwoTone';\r\nimport StarRateIcon from '@material-ui/icons/StarRate';\r\nimport { AvatarGroup } from '@material-ui/lab';\r\nimport ApartsaLogo from '../../asset/Apartsa_logo.png';\r\nimport { Tooltip } from '@material-ui/core';\r\n\r\n\r\nimport { getGitHubRepoStarNumber, getGitHubRepoContributors, getRepoLastCommitDate } from '../../api/GitHub_api';\r\n\r\n\r\n\r\nexport const repoOwner = \"Apartsa2020\";\r\nexport const repoName = \"hippo-ide\";\r\nconst repoLink = \"https://github.com/Apartsa2020/hippo-ide\";\r\n\r\n\r\n/* ---------------\r\n * !!! Heading !!!\r\n * --------------- */\r\nexport default function Heading(props) {\r\n\r\n  \r\n    return (\r\n      <div id=\"heading-block\">\r\n        {/* <div className=\"logo\">\r\n          <a href=\"https://apartsa.com/\">\r\n            <img alt=\"Apartsa Logo\" src={ApartsaLogo} />\r\n          </a>\r\n        </div> */}\r\n  \r\n        <div className=\"headline\">\r\n          <Typography component=\"h1\" variant=\"h4\">\r\n            Hippo IDE\r\n                </Typography>\r\n        </div>\r\n  \r\n        <div className=\"sub-title\">\r\n          <Typography>\r\n            {\"Warning: This is a beta version. All data will be cleared in 2021-01-30 23:00!\"}\r\n          </Typography>\r\n  \r\n          <Typography style={{ paddingTop: 10, }}>\r\n            {\"(The development is still on-going. You are welcomed to contribute codes through \"}\r\n            <Link className=\"heading-link\" href=\"https://github.com/Apartsa2020/hippo-ide\">GitHub</Link>\r\n            {\" or email to \"}\r\n            <Link className=\"heading-link\" href=\"mailto://gx@apartsa.com\" type=\"email\">gx@apartsa.com</Link>\r\n            {\" !) \"}\r\n          </Typography>\r\n        </div>\r\n  \r\n        <div className=\"info-box\">\r\n          <LastUpdateDate />\r\n          <GitHubStarNumber repoOwner={repoOwner} repoName={repoName} />\r\n          <Contributor />\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nfunction LastUpdateDate(props) {\r\n    const [lastModifiedDate, setLastModifiedDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        getRepoLastCommitDate(repoOwner, repoName)\r\n        .then(resp => {\r\n            // console.log( `LastUpdateDate functional component: promise return value = ${resp} with type = ${ typeof(resp) }` );\r\n            setLastModifiedDate(resp);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <span>\r\n        <Tooltip title={\"Last updated on \" + dateToYearMonthDayString(lastModifiedDate)}>\r\n            <a href=\"/\">\r\n            <DateRangeTwoToneIcon style={{ fontSize: \"20px\", }} />\r\n            {dateToYearMonthDayString(lastModifiedDate)}\r\n            </a>\r\n        </Tooltip>\r\n        </span>\r\n    );\r\n}\r\n\r\nfunction GitHubStarNumber(props) {\r\n    const [starNumber, setStarNumber] = useState(0);\r\n\r\n    useEffect(() => {\r\n        getGitHubRepoStarNumber(repoOwner, repoName)\r\n        .then(resp => {\r\n            // console.log(`GitHubStarNumber functional component: fetch success with status code = ${resp}`);\r\n            setStarNumber(resp);\r\n            // console.log(`starNumber = ${starNumber}`);\r\n        })\r\n        .catch(error => console.log(`GitHubStarNumber functional component: ${error.mesg}`));\r\n    }, []);\r\n\r\n    return (\r\n        <span>\r\n        <a href=\"/\">\r\n            {\"GitHub\"}\r\n            <StarRateIcon style={{ fontSize: \"18px\", }} />\r\n            {starNumber}\r\n        </a>\r\n        </span>\r\n    );\r\n}\r\n\r\nfunction Contributor(props) {\r\n    const [contributorArray, setContributorArray] = useState([]);\r\n\r\n    // const githubAvatarAPI = \"https://avatars.githubusercontent.com/\";\r\n    const githubAvatarAPI = \"http://githubavatars.z3c.xyz/\";\r\n\r\n    useEffect(() => {\r\n        getGitHubRepoContributors(repoOwner, repoName)\r\n        .then(resp => {\r\n            setContributorArray(resp);\r\n        })\r\n        .catch(error => {\r\n            console.log(`fetch repo contributor array: error ${error.mesg}`);\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <span>\r\n        <div className=\"contributor\">\r\n            <a href={repoLink} target=\"_blank\" rel=\"noreferrer\">Contributors: </a>\r\n        </div>\r\n        <div className=\"contributor\">\r\n            <AvatarGroup max={4}>\r\n            {contributorArray.map((name, index) => {\r\n                return (\r\n                <Tooltip title={name} key={index}>\r\n                    <Avatar alt={name} src={githubAvatarAPI + name}></Avatar>\r\n                </Tooltip>\r\n                );\r\n            })}\r\n            </AvatarGroup>\r\n        </div>\r\n        </span>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nfunction dateToYearMonthDayString(date) {\r\n    let day = String(date.getDate());\r\n    switch (date.getDate() % 10) {\r\n      case 1:\r\n        day += \"st\";\r\n        break;\r\n      case 2:\r\n        day += \"nd\";\r\n        break;\r\n      case 3:\r\n        day += \"rd\";\r\n        break;\r\n      default:\r\n        day += \"th\";\r\n        break;\r\n    }\r\n  \r\n    let year = String(date.getFullYear());\r\n  \r\n    // Here, getMonth should plus 1 to get the correct output\r\n    let month;\r\n    switch (date.getMonth() + 1) {\r\n      case 1:\r\n        month = \"January\";\r\n        break;\r\n      case 2:\r\n        month = \"February\";\r\n        break;\r\n      case 3:\r\n        month = \"March\";\r\n        break;\r\n      case 4:\r\n        month = \"April\";\r\n        break;\r\n      case 5:\r\n        month = \"May\";\r\n        break;\r\n      case 6:\r\n        month = \"June\";\r\n        break;\r\n      case 7:\r\n        month = \"July\";\r\n        break;\r\n      case 8:\r\n        month = \"August\";\r\n        break;\r\n      case 9:\r\n        month = \"September\";\r\n        break;\r\n      case 10:\r\n        month = \"October\";\r\n        break;\r\n      case 11:\r\n        month = \"November\";\r\n        break;\r\n      case 12:\r\n        month = \"December\";\r\n        break;\r\n      default:\r\n        console.log(`Error in date to year/month/day string function: unidentified month number ${date.getMonth() + 1}`);\r\n        break;\r\n    }\r\n  \r\n    return (day + \" \" + month + \" \" + year);\r\n  }","D:\\Apartsa\\ide\\hippo-ide\\frontend\\src\\components\\HomePage\\ChangeLog.js",[],"D:\\Apartsa\\ide\\hippo-ide\\frontend\\src\\components\\HomePage\\Footer.js",[],"D:\\Apartsa\\ide\\hippo-ide\\frontend\\src\\page\\IndexPage.js",[],"D:\\Apartsa\\ide\\hippo-ide\\frontend\\src\\IndexPage.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":11,"column":8,"nodeType":"49","messageId":"50","endLine":11,"endColumn":19},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'ApartsaLogo' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]